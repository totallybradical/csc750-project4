# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

# ------- PROJECT 3 ADDITIONS -------

# - Main API -

# Add an individual to Merchant class
POST    /addmerchant/:uniqueID                                                                              controllers.HomeController.addMerchant(uniqueID: String)

# Add an individual to Consumer class
POST    /addconsumer/:uniqueID                                                                              controllers.HomeController.addConsumer(uniqueID: String)

#       P4 - ADDITION
# Nationality will be one of “local” or “international”, in lowercase. ID will be unique.
POST    /addbank/:nationality/:bankID                                                                       controllers.HomeController.addBank(nationality: String, bankID: String)

#       P4 - REPLACED BY /transactionrequest
# Add an individual to Transaction class
# POST    /addtransaction/:senderID/:receiverID/:transactionID                                              controllers.HomeController.addTransaction(senderID: String, receiverID: String, transactionID: String)

#       P4 - ADDITION
# Try to add a transaction. If successful, use the transactionRequestID as the transactionID. If unsuccessful, use
# the ID in the log anyway. A failure should specify the rule number that caused the failure. Category will be one
# of the ones listed before, in all lowercase. Amount will be a whole number.
POST    /transactionrequest/:senderID/:receiverID/:bankID/:category/:amount/:transactionRequestID           controllers.HomeController.addTransactionRequest(senderID: String, receiverID: String, bankID: String, category: String, amount: Integer, transactionRequestID: String)

#       P4 - MODIFIED
# Return whether a transaction is commercial. The additional error checking is to #make sure you didn’t add a
# transaction that should have been rejected.
GET     /iscommercial/:transactionID                                                                        controllers.HomeController.isCommercial(transactionID: String)

#       P4 - MODIFIED
# Return whether a transaction is personal
GET     /ispersonal/:transactionID                                                                          controllers.HomeController.isPersonal(transactionID: String)

#       P4 - MODIFIED
# Return whether a transaction is a purchase transaction
GET     /ispurchase/:transactionID                                                                          controllers.HomeController.isPurchase(transactionID: String)

#       P4 - MODIFIED
# Return whether a transaction is a refund transaction
GET     /isrefund/:transactionID                                                                            controllers.HomeController.isRefund(transactionID: String)

#       P4 - MODIFIED
# Return whether a merchant is trusted (return an error if the ID is not a merchant)
GET     /istrusted/:merchantID                                                                              controllers.HomeController.isTrusted(merchantID: String)

#       P4 - ADDITION
# Return whether a bank is blacklisted
GET     /isblacklisted/:bankID                                                                              controllers.HomeController.isBlacklisted(bankID: String)

#       P4 - ADDITION
# Returns the number of rejections suffered by a bank
GET     /bankrejections/:bankID                                                                             controllers.HomeController.getRejections(bankID: String)

#       P4 - MODIFIED
# This should reload the ontology (or delete all added individuals), so that I can start the testing afresh
# Also delete all data in your #knowledge base about banks, and #any other data you were maintaining.
# Delete the log files too. This should reset the system to a “clean” state.
POST    /reset                                                                                              controllers.HomeController.reset

#       P4 - ADDITION
# Refer to the logging section
GET     /rejectionlog                                                                                       controllers.HomeController.getRejectionLog()

#       P4 - ADDITION
# Refer to the logging section
GET     /acceptancelog                                                                                      controllers.HomeController.getAcceptanceLog()